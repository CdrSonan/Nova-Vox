#:kivy 2.0.0

#Copyright 2022, 2023 Contributors to the Nova-Vox project

#This file is part of Nova-Vox.
#Nova-Vox is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
#Nova-Vox is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#You should have received a copy of the GNU General Public License along with Nova-Vox. If not, see <https://www.gnu.org/licenses/>.

#:import soundfile soundfile

<ListElement>:
    size_hint_y: None
    height: 30 * app.root.uiScale
    on_press: self.parent.parent.parent.parent.detailElement(self.index)

<FileSidePanel>:
    size_hint: (min(0.5, 0.4 * app.root.uiScale), None)
    pos_hint:{"x": 1 - min(0.5, 0.4 * app.root.uiScale) - (50 / app.root.width * app.root.uiScale), "y": 0}
    height: app.root.height - 50 * app.root.uiScale
    background: "assets/UI/Toolbar/overlay.png"
    overlay_color: [0, 0, 0, 0]
    BoxLayout:
        padding: 10
        spacing: 10
        orientation: "vertical"
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["save"]
            on_press: self.parent.parent.save()
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["load"]
            on_press: self.parent.parent.load()
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["import"]
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["export"]
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["render"]
            on_press: self.parent.parent.openRenderPopup()

<FileRenderPopup>:
    size_hint: (None, None)
    size: (400, 400)
    title: "render settings"
    separator_color: app.root.accColor
    background: "assets/UI/Toolbar/overlayfull.png"
    overlay_color: [0, 0, 0, 0]
    BoxLayout:
        padding: 10
        spacing: 10
        orientation: "vertical"
        GridLayout:
            rows: 3
            orientation: "tb-lr"
            padding: 10
            spacing: 10
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["format"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["bitdepth"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["samplerate"]
            ManagedSpinner:
                #file format dropdown menu
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: soundfile.available_formats().keys()
                text: "WAV"
                on_text: self.parent.parent.parent.parent.parent.reloadBitdepths(self.text)
            ManagedSpinner:
                #file format bitdepth/subtype dropdown menu
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: soundfile.available_subtypes("WAV").keys()
                text: "PCM_24"
                on_text: self.parent.parent.parent.parent.parent.bitdepth = self.text
            ManagedSpinner:
                #sample rate dropdown menu
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: ["44100", "48000", "96000", "192000"]
                text: "48000"
                on_text: self.parent.parent.parent.parent.parent.sampleRate = self.text
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["render"]
            on_press: self.parent.parent.parent.parent.finalisingClose()

<SingerSidePanel>:
    size_hint: (min(0.5, 0.4 * app.root.uiScale), None)
    pos_hint:{"x": 1 - min(0.5, 0.4 * app.root.uiScale) - (50 / app.root.width * app.root.uiScale), "y": 0}
    height: app.root.height - 50 * app.root.uiScale
    background: "assets/UI/Toolbar/overlay.png"
    overlay_color: [0, 0, 0, 0]
    on_open: self.listVoicebanks()
    BoxLayout:
        orientation: "vertical"
        padding: 10
        spacing: 10
        ScrollView:
            do_scroll: (False, True)
            scroll_type: ["bars"]
            bar_width: 10
            BoxLayout:
                id: singers_list
                size_hint_y: None
                orientation: "vertical"
                spacing: 2
                height: self.minimum_height
        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            rows: 5
            padding: 10
            spacing: 10
            orientation: "tb-lr"
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["name"]
            ManagedLabel:
                size_hint_y: None
                height: 80 * app.root.uiScale
                text: app.root.loc["image"]
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["version"]
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["description"]
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["license"]
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: singer_name
            Image:
                size_hint_y: None
                height: 80 * app.root.uiScale
                id: singer_image
                source: "assets/UI/TrackList/SingerGrey04.png"
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: singer_version
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: singer_description
            ManagedLabel:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: singer_license
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["import"]
            on_press: root.importVoicebank(self.parent.parent.filepaths[self.parent.parent.selectedIndex], self.parent.parent.voicebanks[self.parent.parent.selectedIndex].name, self.parent.parent.voicebanks[self.parent.parent.selectedIndex].image) if (self.parent.parent.selectedIndex != None) else None
        

<ParamSidePanel>:
    size_hint: (min(0.5, 0.4 * app.root.uiScale), None)
    pos_hint:{"x": 1 - min(0.5, 0.4 * app.root.uiScale) - (50 / app.root.width * app.root.uiScale), "y": 0}
    height: app.root.height - 50 * app.root.uiScale
    background: "assets/UI/Toolbar/overlay.png"
    overlay_color: [0, 0, 0, 0]
    on_open: self.listParams()
    BoxLayout:
        orientation: "vertical"
        padding: 10
        spacing: 10
        ScrollView:
            do_scroll: (False, True)
            scroll_type: ["bars"]
            bar_width: 10
            BoxLayout:
                id: params_list
                size_hint_y: None
                orientation: "vertical"
                spacing: 2
                height: self.minimum_height
        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            rows: 6
            padding: 10
            spacing: 10
            orientation: "tb-lr"
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["name"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["type"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: "Capacity:"
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: "Recurrency:"
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["version"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["license"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_name
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_type
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_capacity
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_recurrency
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_version
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                id: param_license
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["import"]
            on_press: root.importParam(self.parent.parent.filepaths[self.parent.parent.selectedIndex], self.parent.parent.parameters[self.parent.parent.selectedIndex].name)

<AddonSelector>:
    Label:
        size_hint_y: None
        height: 30 * app.root.uiScale
        text: self.parent.text
    ImageToggleButton:
        size_hint_x: None
        size_hint_y: None
        width: 30 * app.root.uiScale
        height: 30 * app.root.uiScale
        source: "assets/UI/Toolbar/Adaptive07new.png"
        on_press: self.parent.switch()
    BoxLayout:
        orientation: "vertical"
        padding: 10
        spacing: 10

<ScriptingSidePanel>:
    size_hint: (min(0.5, 0.4 * app.root.uiScale), None)
    pos_hint:{"x": 1 - min(0.5, 0.4 * app.root.uiScale) - (50 / app.root.width * app.root.uiScale), "y": 0}
    height: app.root.height - 50 * app.root.uiScale
    background: "assets/UI/Toolbar/overlay.png"
    overlay_color: [0, 0, 0, 0]
    on_open: self.onOpen()
    on_pre_dismiss: self.onClose()
    BoxLayout:
        orientation: "vertical"
        padding: 10
        spacing: 10
        CodeInput:
            id: scripting_editor
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["run"]
            on_press: self.parent.parent.runScript()
        ManagedButton:
            size_hint_y: None
            height: 30 * app.root.uiScale
            text: app.root.loc["SDK_open"]
            on_press: self.parent.parent.openDevkit()
        ScrollView:
            do_scroll: (False, True)
            scroll_type: ["bars"]
            bar_width: 10
            BoxLayout:
                id: addon_list
                orientation: "vertical"
                spacing: 2

<SettingsSidePanel>:
    size_hint: (min(0.5, 0.4 * app.root.uiScale), None)
    pos_hint:{"x": 1 - min(0.5, 0.4 * app.root.uiScale) - (50 / app.root.width * app.root.uiScale), "y": 0}
    height: app.root.height - 50 * app.root.uiScale
    background: "assets/UI/Toolbar/overlay.png"
    overlay_color: [0, 0, 0, 0]
    on_open: self.readSettings()
    on_pre_dismiss: self.writeSettings()
    ScrollView:
        do_scroll: (False, True)
        scroll_type: ["bars"]
        bar_width: 10
        GridLayout:
            cols: 2
            orientation: "lr-tb"
            padding: 10
            spacing: 10
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["language"]
            ManagedSpinner:
                #language dropdown menu
                id: settings_lang
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: ["en", "jp"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["accelerator"]
            ManagedSpinner:
                #accelerator dropdown menu
                id: settings_accel
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: ["CPU", "GPU"]
                on_text: self.parent.parent.restartRenderProcess()
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["TPU"]
            ManagedSpinner:
                #tensor core dropdown menu
                id: settings_tcores
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: [app.root.loc["disabled"], app.root.loc["enabled"]]
                on_text: self.parent.parent.restartRenderProcess()
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["lowspec_mode"]
            ManagedSpinner:
                #performance mode dropdown menu
                id: settings_lowSpecMode
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: [app.root.loc["disabled"], app.root.loc["enabled"]]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["caching_mode"]
            ManagedSpinner:
                #caching mode dropdown menu
                id: settings_cachingMode
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: [app.root.loc["save_ram"], app.root.loc["default"], app.root.loc["render_speed"]]
                on_text: self.parent.parent.restartRenderProcess()
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["audio_api"]
            ManagedSpinner:
                #audio driver dropdown menu
                id: settings_audioApi
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: self.parent.parent.audioApiNames
                on_text: self.parent.parent.refreshAudioDevices(self.text)
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["audio_device"]
            ManagedSpinner:
                #audio device dropdown menu
                id: settings_audioDevice
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: self.parent.parent.audioDeviceNames
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["tgt_audio_lat"]
            FloatInput:
                #audio latency input
                id: settings_audioLatency
                size_hint_y: None
                height: max(30 * app.root.uiScale, self.minimum_height)
                background_normal: "assets/UI/Toolbar/Adaptive07new.png"
                background_active: "assets/UI/Toolbar/Adaptive07new.png"
                background_color: app.root.accColor if self.focus else (1., 1., 1., 1.)
                foreground_color: (1., 1., 1., 1.)
                halign: "center"
                multiline: False
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["undo_limit"]
            IntInput:
                #undo limit input
                id: settings_undoLimit
                size_hint_y: None
                height: max(30 * app.root.uiScale, self.minimum_height)
                background_normal: "assets/UI/Toolbar/Adaptive07new.png"
                background_active: "assets/UI/Toolbar/Adaptive07new.png"
                background_color: app.root.accColor if self.focus else (1., 1., 1., 1.)
                foreground_color: (1., 1., 1., 1.)
                halign: "center"
                multiline: False
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["loglevel"]
            ManagedSpinner:
                #logging level dropdown menu
                id: settings_loglevel
                sync_height: True
                text_autoupdate: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                values: ["debug", "info", "warning", "error", "critical"]
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["datadir"]
            ManagedButton:
                #data directory selection button
                id: settings_datadir
                sync_height: True
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: ""
                on_press: self.parent.parent.changeDataDir()
            Label:
                size_hint_y: None
                height: 30 * app.root.uiScale
                text: app.root.loc["uiscale"]
            FloatInput:
                #UI scale input
                id: settings_uiScale
                size_hint_y: None
                height: max(30 * app.root.uiScale, self.minimum_height)
                on_text_validate: self.parent.parent.applyColors()
                background_normal: "assets/UI/Toolbar/Adaptive07new.png"
                background_active: "assets/UI/Toolbar/Adaptive07new.png"
                background_color: app.root.accColor if self.focus else (1., 1., 1., 1.)
                foreground_color: (1., 1., 1., 1.)
                halign: "center"
                multiline: False
            Label:
                size_hint_y: None
                height: 200 * app.root.uiScale
                valign: "middle"
                text: app.root.loc["tool_color"]
            ColorWheel:
                #tool bar color wheel
                id: settings_toolColor
                size_hint_y: None
                height: 200 * app.root.uiScale
                on_color: self.parent.parent.applyColors()
            Label:
                size_hint_y: None
                height: 200 * app.root.uiScale
                valign: "middle"
                text: app.root.loc["acc_color"]
            ColorWheel:
                #accent color wheel
                id: settings_accColor
                size_hint_y: None
                height: 200 * app.root.uiScale
                on_color: self.parent.parent.applyColors()
            Label:
                size_hint_y: None
                height: 200 * app.root.uiScale
                valign: "middle"
                text: app.root.loc["bg_color"]
            ColorWheel:
                #background color wheel
                id: settings_bgColor
                size_hint_y: None
                height: 200 * app.root.uiScale
                on_color: self.parent.parent.applyColors()
